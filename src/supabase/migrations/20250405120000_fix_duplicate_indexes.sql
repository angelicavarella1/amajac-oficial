-- ===================================================================
-- Migra√ß√£o: Corre√ß√£o de √çndices Duplicados
-- Autor: Sistema Amajac
-- Data: 2025-04-05
-- Objetivo: Remover √≠ndice duplicado em public.configuracoes.chave
-- ===================================================================

-- 1. VALIDA√á√ÉO PR√â-MIGRA√á√ÉO
DO $$
DECLARE
    duplicate_count INT;
    index1_exists BOOLEAN;
    index2_exists BOOLEAN;
    index_details RECORD;
BEGIN
    RAISE NOTICE 'üöÄ INICIANDO MIGRA√á√ÉO: Corre√ß√£o de √çndices Duplicados';
    
    -- Verificar detalhes dos √≠ndices
    SELECT 
        COUNT(*) as total,
        COUNT(DISTINCT indexdef) as unique_definitions,
        ARRAY_AGG(indexname) as index_names
    INTO index_details
    FROM pg_indexes
    WHERE schemaname = 'public'
      AND tablename = 'configuracoes'
      AND indexdef LIKE '%UNIQUE INDEX%chave%';

    duplicate_count := index_details.total;
    
    RAISE NOTICE 'üîç [PR√â-MIGRA√á√ÉO] √çndices √∫nicos em configuracoes.chave: %', duplicate_count;
    RAISE NOTICE 'üîç [PR√â-MIGRA√á√ÉO] Defini√ß√µes √∫nicas: %', index_details.unique_definitions;
    RAISE NOTICE 'üîç [PR√â-MIGRA√á√ÉO] Nomes dos √≠ndices: %', index_details.index_names;

    -- Verificar exist√™ncia espec√≠fica dos √≠ndices
    SELECT EXISTS(
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public'
          AND tablename = 'configuracoes'
          AND indexname = 'configuracoes_chave_key'
    ) INTO index1_exists;

    SELECT EXISTS(
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public'
          AND tablename = 'configuracoes'
          AND indexname = 'configuracoes_chave_unique'
    ) INTO index2_exists;

    RAISE NOTICE '‚úÖ [PR√â-MIGRA√á√ÉO] configuracoes_chave_key existe: %', index1_exists;
    RAISE NOTICE '‚úÖ [PR√â-MIGRA√á√ÉO] configuracoes_chave_unique existe: %', index2_exists;

    -- Valida√ß√£o mais rigorosa
    IF duplicate_count < 2 THEN
        RAISE WARNING '‚ö†Ô∏è Nenhum √≠ndice duplicado detectado. Migra√ß√£o pode n√£o ser necess√°ria.';
    END IF;

    IF NOT index2_exists THEN
        RAISE NOTICE '‚è≠Ô∏è √çndice alvo (configuracoes_chave_unique) n√£o existe. Nada a fazer.';
    END IF;

    -- Verificar se h√° constraints associadas
    PERFORM 1 FROM information_schema.table_constraints 
    WHERE constraint_schema = 'public' 
      AND table_name = 'configuracoes' 
      AND constraint_name = 'configuracoes_chave_unique';
    
    IF FOUND THEN
        RAISE WARNING '‚ö†Ô∏è Existe uma constraint UNIQUE associada ao √≠ndice. Verifique manualmente.';
    END IF;
END $$;

-- 2. REMO√á√ÉO SEGURA DO √çNDICE DUPLICADO
-- Estrat√©gia: Manter configuracoes_chave_key, remover configuracoes_chave_unique

DO $$
BEGIN
    -- Verificar novamente antes de remover (double-check)
    IF EXISTS (
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public'
          AND tablename = 'configuracoes'
          AND indexname = 'configuracoes_chave_unique'
    ) THEN
        RAISE NOTICE 'üóëÔ∏è Removendo √≠ndice duplicado: public.configuracoes_chave_unique...';
        RAISE NOTICE '‚è≥ Esta opera√ß√£o √© n√£o-bloqueante (CONCURRENTLY)...';
    ELSE
        RAISE NOTICE '‚è≠Ô∏è √çndice configuracoes_chave_unique n√£o existe. Pulando remo√ß√£o.';
        RETURN;
    END IF;
END $$;

-- Comando real de remo√ß√£o (fora do bloco DO para permitir CONCURRENTLY)
DROP INDEX CONCURRENTLY IF EXISTS public.configuracoes_chave_unique;

-- 3. VERIFICA√á√ÉO INTERMEDI√ÅRIA
DO $$
DECLARE
    index_still_exists BOOLEAN;
BEGIN
    -- Verificar se o √≠ndice ainda existe ap√≥s tentativa de remo√ß√£o
    SELECT EXISTS(
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public'
          AND tablename = 'configuracoes'
          AND indexname = 'configuracoes_chave_unique'
    ) INTO index_still_exists;

    IF index_still_exists THEN
        RAISE WARNING '‚ùå Falha ao remover √≠ndice duplicado. O √≠ndice ainda existe.';
        RAISE NOTICE 'üí° Poss√≠vel causa: O √≠ndice est√° sendo usado ou h√° locks ativos.';
    ELSE
        RAISE NOTICE '‚úÖ √çndice duplicado removido com sucesso.';
    END IF;
END $$;

-- 4. VALIDA√á√ÉO P√ìS-MIGRA√á√ÉO
DO $$
DECLARE
    remaining_indexes TEXT[];
    remaining_count INT;
    primary_index_exists BOOLEAN;
BEGIN
    -- Listar √≠ndices restantes
    SELECT ARRAY_AGG(indexname ORDER BY indexname), COUNT(*)
    INTO remaining_indexes, remaining_count
    FROM pg_indexes
    WHERE schemaname = 'public'
      AND tablename = 'configuracoes'
      AND (indexdef LIKE '%chave%' OR indexname LIKE '%chave%');

    -- Verificar se o √≠ndice principal ainda existe
    SELECT EXISTS(
        SELECT 1 FROM pg_indexes
        WHERE schemaname = 'public'
          AND tablename = 'configuracoes'
          AND indexname = 'configuracoes_chave_key'
    ) INTO primary_index_exists;

    RAISE NOTICE 'üìä [P√ìS-MIGRA√á√ÉO] Relat√≥rio Final:';
    RAISE NOTICE '   ‚úÖ √çndices restantes em configuracoes: %', remaining_indexes;
    RAISE NOTICE '   ‚úÖ Total de √≠ndices: %', remaining_count;
    RAISE NOTICE '   ‚úÖ √çndice principal (configuracoes_chave_key) existe: %', primary_index_exists;

    -- Valida√ß√£o do resultado
    IF remaining_count = 1 AND primary_index_exists THEN
        RAISE NOTICE 'üéâ SUCESSO: Migra√ß√£o conclu√≠da com √™xito!';
        RAISE NOTICE '   ‚úì Apenas um √≠ndice √∫nico permanece';
        RAISE NOTICE '   ‚úì √çndice principal preservado';
    ELSIF remaining_count = 0 THEN
        RAISE WARNING '‚ö†Ô∏è ATEN√á√ÉO: Nenhum √≠ndice encontrado para chave. Verifique integridade.';
    ELSIF remaining_count > 1 THEN
        RAISE WARNING '‚ö†Ô∏è ATEN√á√ÉO: Ainda h√° % √≠ndices. Verifique manualmente.', remaining_count;
    END IF;

    -- Verificar integridade dos dados
    PERFORM 1 FROM public.configuracoes WHERE chave IS NULL LIMIT 1;
    IF FOUND THEN
        RAISE WARNING '‚ö†Ô∏è Valores NULL encontrados na coluna chave. Isso pode afetar a constraint √∫nica.';
    END IF;
END $$;

-- 5. ATUALIZA√á√ÉO DE ESTAT√çSTICAS E PERFORMANCE
RAISE NOTICE 'üìà Atualizando estat√≠sticas do planner...';
ANALYZE VERBOSE public.configuracoes;

-- 6. LOG FINAL E RELAT√ìRIO DE BENEF√çCIOS
DO $$
DECLARE
    table_size_before TEXT;
    table_size_after TEXT;
    index_size_before TEXT;
    index_size_after TEXT;
BEGIN
    RAISE NOTICE 'üìã RELAT√ìRIO FINAL DA MIGRA√á√ÉO:';
    RAISE NOTICE '   ‚úÖ Estrutura otimizada: Remo√ß√£o de √≠ndice duplicado';
    RAISE NOTICE '   ‚úÖ Performance: Menos overhead em opera√ß√µes de escrita';
    RAISE NOTICE '   ‚úÖ Storage: Redu√ß√£o no uso de espa√ßo em disco';
    RAISE NOTICE '   ‚úÖ Manuten√ß√£o: Schema mais limpo e compreens√≠vel';
    RAISE NOTICE '';
    RAISE NOTICE 'üîß PR√ìXIMOS PASSOS RECOMENDADOS:';
    RAISE NOTICE '   ‚Ä¢ Monitorar performance das queries relacionadas √† tabela configuracoes';
    RAISE NOTICE '   ‚Ä¢ Verificar logs de aplica√ß√£o por poss√≠veis erros';
    RAISE NOTICE '   ‚Ä¢ Executar VACUUM ANALYZE em hor√°rio de baixa carga se necess√°rio';
    
    RAISE NOTICE 'üèÅ MIGRA√á√ÉO CONCLU√çDA: %', now();
END $$;